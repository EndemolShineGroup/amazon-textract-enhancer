{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters" : {
        "DocumentBucketName" :{
            "Type": "String",
            "Description": " The name for the bucket where you'll upload your scanned documents.",
            "AllowedPattern": "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d\\.]$",
            "Default": "textract-documents",
            "ConstraintDescription" : "Should be a Valid S3 Bucket Name"
        },
        "NewDocumentBucketNeeded" : {
            "Type" : "String",
            "Description" : "Create new S3 bucket for document input?",            
            "AllowedValues" : [ "true", "false" ],
            "Default" : "true"
        },           
        "AmazonTextractJobStatusTopicName" :{
            "Type": "String",
            "Default": "AmazonTextractJobStatusTopic",
            "Description": "SNS Topic where Textract will publish JobIds upon completion"            
        },       
        "LambdaCodeBucketName" :{
            "Type": "String",
            "AllowedPattern": "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d\\.]$",
            "Default": "my-python-packages",
            "ConstraintDescription" : "Should be a Valid S3 Bucket Name",
            "Description": "Existing S3 Bucket ARN where lambda package for textract based document analysis function is hosted."            
        },  
        "LambdaCodeFile" :{
            "Type": "String",
            "Default": "image-analysis-table-extract-async.zip",
            "Description": "Zip Filename containing the lambda code and dependencies"            
        }             
    },  
    "Conditions": {
        "DocumentBucketNameNotEmptyCondition" : { "Fn::Not" : [ { "Fn::Equals" : ["", {"Ref": "DocumentBucketName"}] } ] },
        "NewDocumentBucketNeededCondition" : { "Fn::Equals" : ["true", {"Ref": "NewDocumentBucketNeeded"}] },
        "NewDocumentBucketCreation" : { "Fn::And" : [ {"Condition" : "DocumentBucketNameNotEmptyCondition"}, {"Condition" : "NewDocumentBucketNeededCondition"} ] },
        "AmazonTextractJobStatusTopicNameNotEmptyCondition" : { "Fn::Not" : [ { "Fn::Equals" : ["", {"Ref": "AmazonTextractJobStatusTopicName"}] } ] }
    },
    "Resources": {       
        "AmazonTextractJobStatusTopic" : {
            "Type" : "AWS::SNS::Topic",
            "Condition": "AmazonTextractJobStatusTopicNameNotEmptyCondition",
            "Properties" : {
                "DisplayName" : {"Fn::Join": ["-", [{"Ref": "AWS::Region"}, {"Ref": "AmazonTextractJobStatusTopicName"}]]}
            }
        },
        "AmazonTextractJobStatusQueue" : {
            "DependsOn": "AmazonTextractJobStatusTopic",
            "Type" : "AWS::SQS::Queue",
            "Properties" : {
                "MessageRetentionPeriod": "1209600",
                "ReceiveMessageWaitTimeSeconds": "20",
                "VisibilityTimeout": "60"
            }
        },    
        "QueuePermission": { 
            "Type" : "AWS::SQS::QueuePolicy",
            "DependsOn": "AmazonTextractJobStatusQueue",
            "Properties" : {
               "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Id": "arn:aws:sqs:us-east-1:741855114961:AmazonTextractTextAnalysisResultQueue/SQSDefaultPolicy",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": "*"
                                },
                                "Action": "SQS:SendMessage",
                                "Resource": {"Fn::GetAtt" : ["AmazonTextractJobStatusQueue", "Arn"] },
                                "Condition": {
                                    "ArnEquals": {
                                        "aws:SourceArn": {"Ref" : "AmazonTextractJobStatusTopic"}
                                    }
                            }
                        }
                    ]                   
               },
               "Queues" : [ {"Ref" : "AmazonTextractJobStatusQueue"}]
            }
        },        
        "TopicQueueSubscription": {
            "DependsOn": "QueuePermission",
            "Type" : "AWS::SNS::Subscription",
            "Properties" : {
                "TopicArn" : {"Ref" : "AmazonTextractJobStatusTopic"},
                "Protocol" : "sqs",                
                "Endpoint" : {"Fn::GetAtt" : ["AmazonTextractJobStatusQueue", "Arn"] }
              }            
        },
        "TextractServiceRole": {
            "DependsOn": "TopicQueueSubscription",
            "Type" : "AWS::IAM::Role",
            "Properties" : {  
                "RoleName": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, "TextractServiceRole"]]},            
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "textract.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }                       
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "AmazonTextractServiceRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "sns:Publish"
                                    ],
                                    "Resource": {"Ref" : "AmazonTextractJobStatusTopic"}
                                }                              
                            ]
                        }
                    }
                ]                                
            }
        },             
        "LambdaTextractRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn": "TextractServiceRole",
            "Properties": {
                "RoleName": {"Fn::Join": ["", [{"Ref": "AWS::Region"}, "LambdaTextractRole"]]},
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }                       
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "lambda_basic_execution_policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "xray:PutTraceSegments"
                                    ],
                                    "Resource": "*"
                                }                                
                            ]
                        }
                    },
                    {
                        "PolicyName": "iam_access_policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "iam:*",
                                    "Resource": "*"
                                }                             
                            ]
                        }
                    },
                    {
                        "PolicyName": "sqs_access_policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "sqs:*",
                                    "Resource": "*"
                                }                             
                            ]
                        }
                    },
                    {
                        "PolicyName": "textract_access_policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "textract:*",
                                    "Resource": "*"
                                }                             
                            ]
                        }
                    }                                                              
                ]
            }
        },
        "TextractDocumentAnalyzerFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn" : "LambdaTextractRole",
            "Properties": {
                "Description" : "Python Lambda function that scans an input S3 bucket for scanned document, and invokes Textract to extract text features.",
                "Handler": "image-analysis-table-extract-async.lambda_handler",
                "Role": { "Fn::GetAtt" : ["LambdaTextractRole", "Arn"] },
                "Environment": {
                    "Variables" : 
                        { 
                            "AWS_DATA_PATH": "models",
                            "token_prefix": "TextractDocumentAnalyzerJob",
                            "max_results": "1000",       
                            "max_retry_attempt": "3",   
                            "retry_interval": "10", 
                            "topic_arn": {"Ref" : "AmazonTextractJobStatusTopic"},
                            "queue_url" : {"Ref" : "AmazonTextractJobStatusQueue"},         
                            "role_arn": {"Fn::GetAtt" : ["TextractServiceRole", "Arn"] },  
                            "role_name":  { "Ref": "LambdaTextractRole" }
                        }
                },                 
                "Code": {
                    "S3Bucket": { "Ref" : "LambdaCodeBucketName" },
                    "S3Key": { "Ref" : "LambdaCodeFile" }
                },
                "Runtime": "python3.6",
                "Timeout": "900",
                "MemorySize": "1024",
                "TracingConfig": {
                    "Mode": "Active"
                }
            }
        },
        "LambdaInvokeBucketPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "TextractDocumentAnalyzerFunction",
            "Properties": {
                "FunctionName": {"Ref": "TextractDocumentAnalyzerFunction"},
                "Action": "lambda:InvokeFunction",
                "Principal": "s3.amazonaws.com",
                "SourceAccount": {"Ref": "AWS::AccountId"},
                "SourceArn": {"Fn::Join": [":",["arn","aws","s3","","", {"Fn::Join": ["-", [{"Ref": "AWS::AccountId"}, {"Ref": "DocumentBucketName"}]]}]]}
            }
        },
        "DocumentBucket": {
            "Type": "AWS::S3::Bucket",
            "DependsOn": "LambdaInvokeBucketPermission",
            "Condition": "NewDocumentBucketCreation",          
            "Properties": {
                "BucketName" : {"Fn::Join": ["-", [{"Ref": "AWS::AccountId"}, {"Ref": "DocumentBucketName"}]]},                
                "AccessControl": "Private",
                "VersioningConfiguration": {
                    "Status": "Enabled"
                },
                "NotificationConfiguration": {
                    "LambdaConfigurations" : [
                        {
                            "Event" : "s3:ObjectCreated:*",
                            "Function" : {"Fn::GetAtt": ["TextractDocumentAnalyzerFunction", "Arn"]},
                            "Filter" : { "S3Key" : { "Rules" : [ { "Name" : "suffix", "Value" : "pdf" } ] } }
                        },
                        {
                            "Event" : "s3:ObjectCreated:*",
                            "Function" : {"Fn::GetAtt": ["TextractDocumentAnalyzerFunction", "Arn"]},
                            "Filter" : { "S3Key" : { "Rules" : [ { "Name" : "suffix", "Value" : "jpg" } ] } }

                        },
                        {
                            "Event" : "s3:ObjectCreated:*",
                            "Function" : {"Fn::GetAtt": ["TextractDocumentAnalyzerFunction", "Arn"]},
                            "Filter" : { "S3Key" : { "Rules" : [ { "Name" : "suffix", "Value" : "jpeg" } ] } }

                        }                      
                    ]
                }                
            },
            "DeletionPolicy" : "Retain"
        },
        "DocumentBucketPolicy": {
            "Type" : "AWS::S3::BucketPolicy",
            "DependsOn": "DocumentBucket",
            "Condition": "NewDocumentBucketCreation",
            "Properties" : {
               "Bucket" : {"Ref": "DocumentBucket"},
               "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {"Fn::GetAtt" : ["LambdaTextractRole", "Arn"] }
                            },
                            "Action": [
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:PutObject",
                                "s3:PutObjectAcl"
                            ],
                            "Resource": {"Fn::Join": ["/", [{"Fn::GetAtt": ["DocumentBucket", "Arn"]}, "*"]]}
                        },
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {"Fn::GetAtt" : ["LambdaTextractRole", "Arn"] }
                            },
                            "Action": [
                                "s3:ListBucket",
                                "s3:ListBucketVersions"
                            ],
                            "Resource": {"Fn::GetAtt": ["DocumentBucket", "Arn"]}
                        }                        
                    ]                   
               }
            },
            "DeletionPolicy" : "Retain"
        },
        "TextractDemoAPI": {
            "Type": "AWS::ApiGateway::RestApi",
            "DependsOn": "TextractDocumentAnalyzerFunction",
            "Properties": {
                "Name": "Textract Demo API",
                "Description" : "API to invoke Textract with documents on specified S3 bucket, and extract text features",
                "FailOnWarnings": true,
                "Body": {
                    "swagger":"2.0",
                    "info":{
                        "version":"2018-02-16T18:05:24Z",
                        "title":"Textract Demo API"
                    },
                    "host":"zejy1hx0p0.execute-api.us-west-2.amazonaws.com",
                    "basePath":"/test",
                    "schemes":[
                        "https"
                    ],
                    "paths":{
                        "/analyzetext":{
                            "get":{
                                "consumes":[
                                    "application/json"
                                ],
                                "produces":[
                                    "application/json"
                                ],
                                "parameters":[
                                    {
                                        "name":"Bucket",
                                        "in":"query",
                                        "required":true,
                                        "type":"string"
                                    },
                                    {
                                        "name":"Document",
                                        "in":"query",
                                        "required":true,
                                        "type":"string"
                                    },
                                    {
                                        "name":"FeatureType",
                                        "in":"query",
                                        "required":false,
                                        "type":"string"
                                    }
                                ],
                                "responses":{
                                    "200":{
                                        "description":"200 response",
                                        "schema":{
                                            "$ref":"#/definitions/Empty"
                                        },
                                        "headers":{
                                            "Access-Control-Allow-Origin":{
                                                "type":"string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration":{
                                    "responses":{
                                        "default":{
                                            "statusCode":"200",
                                            "responseParameters":{
                                                "method.response.header.Access-Control-Allow-Origin":"'*'"
                                            }
                                        }
                                    },
                                    "uri": {"Fn::Join": ["",
                                        ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["TextractDocumentAnalyzerFunction", "Arn"]}, "/invocations"]
                                    ]},
                                    "passthroughBehavior":"when_no_templates",
                                    "httpMethod":"POST",
                                    "requestTemplates":{
                                        "application/json":"{ \"ExternalBucketName\": \"$input.params('Bucket')\",\"ExternalDocumentPrefix\": \"$input.params('Document')\",\"FeatureTypes\": \"$input.params('FeatureType')\"}"
                                    },
                                    "contentHandling":"CONVERT_TO_TEXT",
                                    "type":"aws"
                                }
                            },
                            "options":{
                                "consumes":[
                                    "application/json"
                                ],
                                "produces":[
                                    "application/json"
                                ],
                                "responses":{
                                    "200":{
                                        "description":"200 response",
                                        "schema":{
                                            "$ref":"#/definitions/Empty"
                                        },
                                        "headers":{
                                            "Access-Control-Allow-Origin":{
                                                "type":"string"
                                            },
                                            "Access-Control-Allow-Methods":{
                                                "type":"string"
                                            },
                                            "Access-Control-Allow-Headers":{
                                                "type":"string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration":{
                                    "responses":{
                                        "default":{
                                            "statusCode":"200",
                                            "responseParameters":{
                                                "method.response.header.Access-Control-Allow-Methods":"'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Headers":"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                                "method.response.header.Access-Control-Allow-Origin":"'*'"
                                            }
                                        }
                                    },
                                    "passthroughBehavior":"when_no_match",
                                    "requestTemplates":{
                                        "application/json":"{\"statusCode\": 200}"
                                    },
                                    "type":"mock"
                                }
                            }
                        }
                    },
                    "definitions":{
                        "Empty":{
                            "type":"object",
                            "title":"Empty Schema"
                        }
                    }
                }
            }
        },
        "EnterCustomerFeedbackLambdaPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "TextractDemoAPI",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "FunctionName": {"Fn::GetAtt": ["TextractDocumentAnalyzerFunction", "Arn"]},
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {"Fn::Join": ["",
        ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "TextractDemoAPI"}, "/*"]
                ]}
            }
        },
        "TextractDemoAPIDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": "TextractDemoAPI",
            "Properties": {
                "RestApiId": {"Ref": "TextractDemoAPI"},
                "StageName": "demo",
                "StageDescription": {
                    "LoggingLevel": "INFO",
        "MetricsEnabled": "true"
                }
            }
        }                                          
    }    
}