{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Parameters" : {
        "DocumentBucketName" :{
            "Type": "String",
            "Description": " The name for the bucket where you'll upload your scanned documents.",
            "AllowedPattern": "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d\\.]$",
            "Default": "scanned-documents",
            "ConstraintDescription" : "Should be a Valid S3 Bucket Name"
        },
        "NewDocumentBucketNeeded" : {
            "Type" : "String",
            "Description" : "Create new S3 bucket for document input?",            
            "AllowedValues" : [ "true", "false" ],
            "Default" : "true"
        },            
        "TextractRoleName" :{
            "Type": "String",
            "Description": " The role that Textract will use assume permissions to publish to SNS topic and to access S3 bucket.",
            "Default": "ServiceTextractRole",
            "ConstraintDescription" : "Should be a Valid IAM Role Name"
        }, 
        "LambdaRoleName" :{
            "Type": "String",
            "Description": " The role that Lambda functions will assume in order be able to Textract API and access S3 buckets",
            "Default": "LambdaTextractRole",
            "ConstraintDescription" : "Should be a Valid IAM Role Name"
        },              
        "AmazonTextractJobStatusTopicName" :{
            "Type": "String",
            "Default": "AmazonTextractJobStatusTopic",
            "Description": "SNS Topic where Textract will publish JobIds upon completion"            
        },       
        "DynamoDBTableName" :{
            "Type": "String",
            "Description": "DynamoDB Table name where job status and results will be stored",
            "AllowedPattern": "^[a-zA-Z0-9._-]{3,255}$",
            "Default": "TextractTrackingTable",
            "ConstraintDescription" : "Should be a Valid DynamoDB Table Name"
        },        
        "LambdaCodeBucketName" :{
            "Type": "String",
            "AllowedPattern": "^([a-z]|(\\d(?!\\d{0,2}\\.\\d{1,3}\\.\\d{1,3}\\.\\d{1,3})))([a-z\\d]|(\\.(?!(\\.|-)))|(-(?!\\.))){1,61}[a-z\\d\\.]$",
            "Default": "my-python-packages",
            "ConstraintDescription" : "Should be a Valid S3 Bucket Name",
            "Description": "Existing S3 Bucket ARN where lambda package for textract based document analysis function is hosted."            
        },  
        "LambdaCodeFile" :{
            "Type": "String",
            "Default": "textract-lambda-code.zip",
            "Description": "Zip Filename containing the lambda code and dependencies"            
        }             
    },  
    "Conditions": {
        "DocumentBucketNameNotEmptyCondition" : { "Fn::Not" : [ { "Fn::Equals" : ["", {"Ref": "DocumentBucketName"}] } ] },
        "NewDocumentBucketNeededCondition" : { "Fn::Equals" : ["true", {"Ref": "NewDocumentBucketNeeded"}] },
        "NewDocumentBucketCreation" : { "Fn::And" : [ {"Condition" : "DocumentBucketNameNotEmptyCondition"}, {"Condition" : "NewDocumentBucketNeededCondition"} ] },
        "AmazonTextractJobStatusTopicNameNotEmptyCondition" : { "Fn::Not" : [ { "Fn::Equals" : ["", {"Ref": "AmazonTextractJobStatusTopicName"}] } ] }
    },
    "Resources": {     
        "TextractDocumentAnalysisTable": {
            "Type": "AWS::DynamoDB::Table",
            "Properties": {
                "TableName": {"Ref" : "DynamoDBTableName"},
                "AttributeDefinitions": [
                    {
                        "AttributeName": "JobId",
                        "AttributeType": "S"
                    },                 
                    {
                        "AttributeName": "DocumentBucket",
                        "AttributeType": "S"
                    },
                    {
                        "AttributeName": "DocumentPath",
                        "AttributeType": "S"
                    }                    
                ],
                "KeySchema": [
                    {
                        "AttributeName": "JobId",
                        "KeyType": "HASH"
                    }
                ],
                "GlobalSecondaryIndexes": [
                    {
                        "IndexName": "DocumentIndex",
                        "KeySchema": [
                              {
                                    "AttributeName": "DocumentBucket",
                                    "KeyType": "HASH"
                              },
                              {
                                    "AttributeName": "DocumentPath",
                                    "KeyType": "RANGE"
                              }
                        ],
                        "Projection": {
                            "ProjectionType": "KEYS_ONLY"
                        },
                        "ProvisionedThroughput": {
                              "ReadCapacityUnits": 5,
                              "WriteCapacityUnits": 5
                        }
                    }
                ],                
                "ProvisionedThroughput": {
                    "ReadCapacityUnits": 5,
                    "WriteCapacityUnits": 5
                }
            }
        },
        "ScalingRole": {
            "Type": "AWS::IAM::Role",
            "DependsOn": "TextractDocumentAnalysisTable",
            "Properties": {
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "application-autoscaling.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "root",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "dynamodb:DescribeTable",
                                        "dynamodb:UpdateTable",
                                        "cloudwatch:PutMetricAlarm",
                                        "cloudwatch:DescribeAlarms",
                                        "cloudwatch:GetMetricStatistics",
                                        "cloudwatch:SetAlarmState",
                                        "cloudwatch:DeleteAlarms"
                                    ],
                                    "Resource": "*"
                                }
                            ]
                        }
                    }
                ]
            }
        },
        "WriteCapacityScalableTarget": {
            "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
            "DependsOn": "ScalingRole",
            "Properties": {
                "MaxCapacity": 15,
                "MinCapacity": 5,
                "ResourceId": { "Fn::Join": [
                  "/",
                  [
                    "table",
                    { "Ref": "TextractDocumentAnalysisTable" }
                  ]
                ] },
                "RoleARN": {
                  "Fn::GetAtt": ["ScalingRole", "Arn"]
                },
                "ScalableDimension": "dynamodb:table:WriteCapacityUnits",
                "ServiceNamespace": "dynamodb"
            }
        },
        "ReadCapacityScalableTarget": {
            "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
            "DependsOn": "ScalingRole",
            "Properties": {
                "MaxCapacity": 15,
                "MinCapacity": 5,
                "ResourceId": { "Fn::Join": [
                  "/",
                  [
                    "table",
                    { "Ref": "TextractDocumentAnalysisTable" }
                  ]
                ] },
                "RoleARN": {
                  "Fn::GetAtt": ["ScalingRole", "Arn"]
                },
                "ScalableDimension": "dynamodb:table:ReadCapacityUnits",
                "ServiceNamespace": "dynamodb"
            }
        },
        "WriteScalingPolicy": {
            "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "DependsOn": "WriteCapacityScalableTarget",
            "Properties": {
                "PolicyName": "WriteAutoScalingPolicy",
                "PolicyType": "TargetTrackingScaling",
                "ScalingTargetId": {
                    "Ref": "WriteCapacityScalableTarget"
                },
                "TargetTrackingScalingPolicyConfiguration": {
                    "TargetValue": 50.0,
                    "ScaleInCooldown": 60,
                    "ScaleOutCooldown": 60,
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "DynamoDBWriteCapacityUtilization"
                    }
                }
            }
        },
        "ReadScalingPolicy": {
            "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
            "DependsOn": "ReadCapacityScalableTarget",
            "Properties": {
                "PolicyName": "ReadAutoScalingPolicy",
                "PolicyType": "TargetTrackingScaling",
                "ScalingTargetId": {
                    "Ref": "ReadCapacityScalableTarget"
                },
                "TargetTrackingScalingPolicyConfiguration": {
                    "TargetValue": 50.0,
                    "ScaleInCooldown": 60,
                    "ScaleOutCooldown": 60,
                    "PredefinedMetricSpecification": {
                        "PredefinedMetricType": "DynamoDBReadCapacityUtilization"
                    }
                }
            }
        },                             
        "LambdaTextractRole": {
            "Type": "AWS::IAM::Role",
            "Properties": {
                "RoleName": {"Fn::Join": ["-", [{"Ref": "AWS::Region"}, {"Ref":"LambdaRoleName"}]]},
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "lambda.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }                       
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "lambda_basic_execution_policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "logs:CreateLogGroup",
                                        "logs:CreateLogStream",
                                        "logs:PutLogEvents"
                                    ],
                                    "Resource": "arn:aws:logs:*:*:*"
                                },
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "xray:PutTraceSegments"
                                    ],
                                    "Resource": "*"
                                }                                
                            ]
                        }
                    },
                    {
                        "PolicyName": "iam_access_policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "iam:*",
                                    "Resource": "*"
                                }                             
                            ]
                        }
                    },
                    {
                        "PolicyName": "dynamodb_access_policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "dynamodb:*",
                                    "Resource": "*"
                                }                             
                            ]
                        }
                    },
                    {
                        "PolicyName": "textract_access_policy",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": "textract:*",
                                    "Resource": "*"
                                }                             
                            ]
                        }
                    }                                                              
                ]
            }
        },
        "TextractAsyncJobSubmitFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn" : "LambdaTextractRole",
            "Properties": {
                "Description" : "Python Lambda function that scans an input S3 bucket for scanned document, and invokes Textract to extract text features.",
                "Handler": "image-analysis-textract-submit.lambda_handler",
                "Role": { "Fn::GetAtt" : ["LambdaTextractRole", "Arn"] },               
                "Environment": {
                    "Variables" : 
                        { 
                            "AWS_DATA_PATH": "models",
                            "max_retry_attempt": "3",   
                            "retry_interval": "30",                             
                            "token_prefix": "TextractDocumentAnalyzerJob",
                            "topic_arn": {"Ref" : "AmazonTextractJobStatusTopic"},
                            "role_arn": {"Fn::Join": [":",["arn","aws","iam","",{"Ref": "AWS::AccountId"}, {"Fn::Join": ["/", ["role", {"Fn::Join": ["-", [{"Ref": "AWS::Region"}, {"Ref": "TextractRoleName"}]]}]]}]]},
                            "role_name":  { "Ref": "LambdaTextractRole" },
                            "table_name": {"Ref" : "TextractDocumentAnalysisTable"}
                        }
                },                 
                "Code": {
                    "S3Bucket": { "Ref" : "LambdaCodeBucketName" },
                    "S3Key": { "Ref" : "LambdaCodeFile" }
                },
                "Runtime": "python3.6",
                "Timeout": "900",
                "MemorySize": "1024",
                "TracingConfig": {
                    "Mode": "Active"
                }
            }
        },
        "TextractPostProcessTableFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn" : "LambdaTextractRole",
            "Properties": {
                "Description" : "Python Lambda function that retrieves the document job result and extracts table structure from the result",
                "Handler": "image-analysis-postprocess-table.lambda_handler",
                "Role": { "Fn::GetAtt" : ["LambdaTextractRole", "Arn"] },
                "Environment": {
                    "Variables" : 
                        { 
                            "AWS_DATA_PATH": "models",
                            "max_retry_attempt": "3",   
                            "retry_interval": "10",
                            "max_results": "1000",
                            "table_name": {"Ref" : "TextractDocumentAnalysisTable"}
                        }
                },                 
                "Code": {
                    "S3Bucket": { "Ref" : "LambdaCodeBucketName" },
                    "S3Key": { "Ref" : "LambdaCodeFile" }
                },
                "Runtime": "python3.6",
                "Timeout": "900",
                "MemorySize": "1024",
                "TracingConfig": {
                    "Mode": "Active"
                }
            }
        },   
        "TextractPostProcessFormFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn" : "LambdaTextractRole",
            "Properties": {
                "Description" : "Python Lambda function that retrieves the document job result and extracts form fields from the result",
                "Handler": "image-analysis-postprocess-form.lambda_handler",
                "Role": { "Fn::GetAtt" : ["LambdaTextractRole", "Arn"] },
                "Environment": {
                    "Variables" : 
                        { 
                            "AWS_DATA_PATH": "models",
                            "max_retry_attempt": "3",   
                            "retry_interval": "10",
                            "max_results": "1000",
                            "table_name": {"Ref" : "TextractDocumentAnalysisTable"}
                        }
                },                 
                "Code": {
                    "S3Bucket": { "Ref" : "LambdaCodeBucketName" },
                    "S3Key": { "Ref" : "LambdaCodeFile" }
                },
                "Runtime": "python3.6",
                "Timeout": "900",
                "MemorySize": "1024",
                "TracingConfig": {
                    "Mode": "Active"
                }
            }
        },  
        "TextractResultRetrievalFunction": {
            "Type": "AWS::Lambda::Function",
            "DependsOn" : "LambdaTextractRole",
            "Properties": {
                "Description" : "Python Lambda function that retrieves the textract results in form of html tables and json dicitionary by reading files from s3 output location",
                "Handler": "image-analysis-result-retrieval.lambda_handler",
                "Role": { "Fn::GetAtt" : ["LambdaTextractRole", "Arn"] },
                "Environment": {
                    "Variables" : 
                        { 
                            "AWS_DATA_PATH": "models",
                            "table_name": {"Ref" : "TextractDocumentAnalysisTable"}
                        }
                },                 
                "Code": {
                    "S3Bucket": { "Ref" : "LambdaCodeBucketName" },
                    "S3Key": { "Ref" : "LambdaCodeFile" }
                },
                "Runtime": "python3.6",
                "Timeout": "900",
                "MemorySize": "1024",
                "TracingConfig": {
                    "Mode": "Active"
                }
            }
        },                          
        "LambdaInvokeS3Permission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "TextractAsyncJobSubmitFunction",
            "Properties": {
                "FunctionName": {"Ref": "TextractAsyncJobSubmitFunction"},
                "Action": "lambda:InvokeFunction",
                "Principal": "s3.amazonaws.com",
                "SourceArn": {"Fn::Join": [":",["arn","aws","s3","","", {"Fn::Join": ["-", [{"Ref": "AWS::AccountId"}, {"Ref": "DocumentBucketName"}]]}]]}
            }
        },        
        "AmazonTextractJobStatusTopic" : {
            "Type" : "AWS::SNS::Topic",
            "DependsOn": ["TextractPostProcessTableFunction", "TextractPostProcessFormFunction"],
            "Condition": "AmazonTextractJobStatusTopicNameNotEmptyCondition",
            "Properties" : {
                "DisplayName" : {"Fn::Join": ["-", [{"Ref": "AWS::Region"}, {"Ref": "AmazonTextractJobStatusTopicName"}]]},
                "Subscription": [
                    {
                        "Endpoint" : {"Fn::GetAtt" : ["TextractPostProcessTableFunction", "Arn"] },
                        "Protocol": "lambda"
                    },
                    {
                        "Endpoint" : {"Fn::GetAtt" : ["TextractPostProcessFormFunction", "Arn"] },
                        "Protocol": "lambda"
                    }                
                ]                  
            }          
        },    
        "PostProcessTableInvokeSNSPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "AmazonTextractJobStatusTopic",
            "Properties": {
                "FunctionName": {"Ref": "TextractPostProcessTableFunction"},
                "Action": "lambda:InvokeFunction",
                "Principal": "sns.amazonaws.com",
                "SourceArn": {"Ref": "AmazonTextractJobStatusTopic"}
            }
        },        
        "PostProcessFormInvokeSNSPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "AmazonTextractJobStatusTopic",
            "Properties": {
                "FunctionName": {"Ref": "TextractPostProcessFormFunction"},
                "Action": "lambda:InvokeFunction",
                "Principal": "sns.amazonaws.com",
                "SourceArn": {"Ref": "AmazonTextractJobStatusTopic"}
            }
        },     
        "TextractServiceRole": {
            "Type" : "AWS::IAM::Role",
            "DependsOn": "AmazonTextractJobStatusTopic",            
            "Properties" : {  
                "RoleName": {"Fn::Join": ["-", [{"Ref": "AWS::Region"}, {"Ref": "TextractRoleName"}]]},            
                "AssumeRolePolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "Service": [
                                    "textract.amazonaws.com"
                                ]
                            },
                            "Action": [
                                "sts:AssumeRole"
                            ]
                        }                       
                    ]
                },
                "Path": "/",
                "Policies": [
                    {
                        "PolicyName": "AmazonTextractServiceRole",
                        "PolicyDocument": {
                            "Version": "2012-10-17",
                            "Statement": [
                                {
                                    "Effect": "Allow",
                                    "Action": [
                                        "sns:Publish"
                                    ],
                                    "Resource": {"Ref" : "AmazonTextractJobStatusTopic"}
                                }                              
                            ]
                        }
                    }
                ]                                
            }
        },                            
        "DocumentBucket": {
            "Type": "AWS::S3::Bucket",
            "DependsOn": ["LambdaInvokeS3Permission", "TextractAsyncJobSubmitFunction"],
            "Condition": "NewDocumentBucketCreation",          
            "Properties": {
                "BucketName" : {"Fn::Join": ["-", [{"Ref": "AWS::AccountId"}, {"Ref": "DocumentBucketName"}]]},                
                "AccessControl": "Private",
                "VersioningConfiguration": {
                    "Status": "Enabled"
                },
                "NotificationConfiguration": {
                    "LambdaConfigurations" : [
                        {
                            "Event" : "s3:ObjectCreated:*",
                            "Function" : {"Fn::GetAtt": ["TextractAsyncJobSubmitFunction", "Arn"]},
                            "Filter" : { "S3Key" : { "Rules" : [ { "Name" : "suffix", "Value" : "pdf" } ] } }
                        },
                        {
                            "Event" : "s3:ObjectCreated:*",
                            "Function" : {"Fn::GetAtt": ["TextractAsyncJobSubmitFunction", "Arn"]},
                            "Filter" : { "S3Key" : { "Rules" : [ { "Name" : "suffix", "Value" : "jpg" } ] } }

                        },
                        {
                            "Event" : "s3:ObjectCreated:*",
                            "Function" : {"Fn::GetAtt": ["TextractAsyncJobSubmitFunction", "Arn"]},
                            "Filter" : { "S3Key" : { "Rules" : [ { "Name" : "suffix", "Value" : "jpeg" } ] } }

                        }                      
                    ]
                }                
            },
            "DeletionPolicy" : "Retain"
        },
        "DocumentBucketPolicy": {
            "Type" : "AWS::S3::BucketPolicy",
            "DependsOn": "DocumentBucket",
            "Condition": "NewDocumentBucketCreation",
            "Properties" : {
               "Bucket" : {"Ref": "DocumentBucket"},
               "PolicyDocument" : {
                    "Version": "2012-10-17",
                    "Statement": [
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {"Fn::GetAtt" : ["LambdaTextractRole", "Arn"] }
                            },
                            "Action": [
                                "s3:GetObject",
                                "s3:GetObjectVersion",
                                "s3:PutObject",
                                "s3:PutObjectAcl"
                            ],
                            "Resource": {"Fn::Join": ["/", [{"Fn::GetAtt": ["DocumentBucket", "Arn"]}, "*"]]}
                        },
                        {
                            "Effect": "Allow",
                            "Principal": {
                                "AWS": {"Fn::GetAtt" : ["LambdaTextractRole", "Arn"] }
                            },
                            "Action": [
                                "s3:ListBucket",
                                "s3:ListBucketVersions"
                            ],
                            "Resource": {"Fn::GetAtt": ["DocumentBucket", "Arn"]}
                        }                        
                    ]                   
               }
            },
            "DeletionPolicy" : "Retain"
        },
        "TextractDemoAPI": {
            "Type": "AWS::ApiGateway::RestApi",
            "DependsOn": ["TextractAsyncJobSubmitFunction", "TextractResultRetrievalFunction"],
            "Properties": {
                "Name": "Textract Demo API",
                "Description" : "API to invoke Textract with documents on specified S3 bucket, and extract text features",
                "FailOnWarnings": true,
                "Body": {
                    "swagger":"2.0",
                    "info":{
                        "version":"2018-02-16T18:05:24Z",
                        "title":"Textract Demo API"
                    },
                    "host":"zejy1hx0p0.execute-api.us-west-2.amazonaws.com",
                    "basePath":"/test",
                    "schemes":[
                        "https"
                    ],
                    "paths":{
                        "/submittextanalysisjob":{
                            "get":{
                                "consumes":[
                                    "application/json"
                                ],
                                "produces":[
                                    "application/json"
                                ],
                                "parameters":[
                                    {
                                        "name":"Bucket",
                                        "in":"query",
                                        "required":true,
                                        "type":"string"
                                    },
                                    {
                                        "name":"Document",
                                        "in":"query",
                                        "required":true,
                                        "type":"string"
                                    }
                                ],
                                "responses":{
                                    "200":{
                                        "description":"200 response",
                                        "schema":{
                                            "$ref":"#/definitions/Empty"
                                        },
                                        "headers":{
                                            "Access-Control-Allow-Origin":{
                                                "type":"string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration":{
                                    "responses":{
                                        "default":{
                                            "statusCode":"200",
                                            "responseParameters":{
                                                "method.response.header.Access-Control-Allow-Origin":"'*'"
                                            }
                                        }
                                    },
                                    "uri": {"Fn::Join": ["",
                                        ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["TextractAsyncJobSubmitFunction", "Arn"]}, "/invocations"]
                                    ]},
                                    "passthroughBehavior":"when_no_templates",
                                    "httpMethod":"POST",
                                    "requestTemplates":{
                                        "application/json":"{ \"ExternalBucketName\": \"$input.params('Bucket')\",\"ExternalDocumentPrefix\": \"$input.params('Document')\"}"
                                    },
                                    "contentHandling":"CONVERT_TO_TEXT",
                                    "type":"aws"
                                }
                            },
                            "options":{
                                "consumes":[
                                    "application/json"
                                ],
                                "produces":[
                                    "application/json"
                                ],
                                "responses":{
                                    "200":{
                                        "description":"200 response",
                                        "schema":{
                                            "$ref":"#/definitions/Empty"
                                        },
                                        "headers":{
                                            "Access-Control-Allow-Origin":{
                                                "type":"string"
                                            },
                                            "Access-Control-Allow-Methods":{
                                                "type":"string"
                                            },
                                            "Access-Control-Allow-Headers":{
                                                "type":"string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration":{
                                    "responses":{
                                        "default":{
                                            "statusCode":"200",
                                            "responseParameters":{
                                                "method.response.header.Access-Control-Allow-Methods":"'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Headers":"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                                "method.response.header.Access-Control-Allow-Origin":"'*'"
                                            }
                                        }
                                    },
                                    "passthroughBehavior":"when_no_match",
                                    "requestTemplates":{
                                        "application/json":"{\"statusCode\": 200}"
                                    },
                                    "type":"mock"
                                }
                            }
                        },
                        "/retrievetextanalysisresult":{
                            "get":{
                                "consumes":[
                                    "application/json"
                                ],
                                "produces":[
                                    "application/json"
                                ],
                                "parameters":[
                                    {
                                        "name":"Bucket",
                                        "in":"query",
                                        "required":true,
                                        "type":"string"
                                    },
                                    {
                                        "name":"Document",
                                        "in":"query",
                                        "required":true,
                                        "type":"string"
                                    },
                                    {
                                        "name":"ResultType",
                                        "in":"query",
                                        "required":false,
                                        "type":"string"
                                    }
                                ],
                                "responses":{
                                    "200":{
                                        "description":"200 response",
                                        "schema":{
                                            "$ref":"#/definitions/Empty"
                                        },
                                        "headers":{
                                            "Access-Control-Allow-Origin":{
                                                "type":"string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration":{
                                    "responses":{
                                        "default":{
                                            "statusCode":"200",
                                            "responseParameters":{
                                                "method.response.header.Access-Control-Allow-Origin":"'*'"
                                            }
                                        }
                                    },
                                    "uri": {"Fn::Join": ["",
                                        ["arn:aws:apigateway:", {"Ref": "AWS::Region"}, ":lambda:path/2015-03-31/functions/", {"Fn::GetAtt": ["TextractResultRetrievalFunction", "Arn"]}, "/invocations"]
                                    ]},
                                    "passthroughBehavior":"when_no_templates",
                                    "httpMethod":"POST",
                                    "requestTemplates":{
                                        "application/json":"{ \"DocumentBucket\": \"$input.params('Bucket')\",\"DocumentKey\": \"$input.params('Document')\",\"ResultType\": \"$input.params('ResultType')\"}"
                                    },
                                    "contentHandling":"CONVERT_TO_TEXT",
                                    "type":"aws"
                                }
                            },
                            "options":{
                                "consumes":[
                                    "application/json"
                                ],
                                "produces":[
                                    "application/json"
                                ],
                                "responses":{
                                    "200":{
                                        "description":"200 response",
                                        "schema":{
                                            "$ref":"#/definitions/Empty"
                                        },
                                        "headers":{
                                            "Access-Control-Allow-Origin":{
                                                "type":"string"
                                            },
                                            "Access-Control-Allow-Methods":{
                                                "type":"string"
                                            },
                                            "Access-Control-Allow-Headers":{
                                                "type":"string"
                                            }
                                        }
                                    }
                                },
                                "x-amazon-apigateway-integration":{
                                    "responses":{
                                        "default":{
                                            "statusCode":"200",
                                            "responseParameters":{
                                                "method.response.header.Access-Control-Allow-Methods":"'GET,OPTIONS'",
                                                "method.response.header.Access-Control-Allow-Headers":"'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'",
                                                "method.response.header.Access-Control-Allow-Origin":"'*'"
                                            }
                                        }
                                    },
                                    "passthroughBehavior":"when_no_match",
                                    "requestTemplates":{
                                        "application/json":"{\"statusCode\": 200}"
                                    },
                                    "type":"mock"
                                }
                            }
                        }                        
                    },
                    "definitions":{
                        "Empty":{
                            "type":"object",
                            "title":"Empty Schema"
                        }
                    }
                }
            }
        },
        "JobSubmitLambdaInvokeAPIPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "TextractDemoAPI",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "FunctionName": {"Fn::GetAtt": ["TextractAsyncJobSubmitFunction", "Arn"]},
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {"Fn::Join": ["",
        ["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "TextractDemoAPI"}, "/*"]
                ]}
            }
        },
        "ResultRetrievalLambdaInvokeAPIPermission": {
            "Type": "AWS::Lambda::Permission",
            "DependsOn": "TextractDemoAPI",
            "Properties": {
                "Action": "lambda:invokeFunction",
                "FunctionName": {"Fn::GetAtt": ["TextractResultRetrievalFunction", "Arn"]},
                "Principal": "apigateway.amazonaws.com",
                "SourceArn": {"Fn::Join": ["",["arn:aws:execute-api:", {"Ref": "AWS::Region"}, ":", {"Ref": "AWS::AccountId"}, ":", {"Ref": "TextractDemoAPI"}, "/*"]]}
            }
        },        
        "TextractDemoAPIDeployment": {
            "Type": "AWS::ApiGateway::Deployment",
            "DependsOn": "TextractDemoAPI",
            "Properties": {
                "RestApiId": {"Ref": "TextractDemoAPI"},
                "StageName": "demo",
                "StageDescription": {
                    "LoggingLevel": "INFO",
        "MetricsEnabled": "true"
                }
            }
        }                                          
    }    
}